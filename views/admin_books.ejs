<%- include('partials/navbar') %>

<body>
    <%- include('partials/admin_sidebar') %>
    
    <div class="dashboard">
        <%- include('partials/admin_header') %>
        
        <div class="container-fluid p-4">
            <!-- Search and Filter Bar -->
            <div class="search-filter-bar">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="input-group">
                            <input type="text" class="form-control search-input" id="searchInput" placeholder="Buscar por título...">
                            <button class="btn btn-primary search-btn" type="button" id="searchBtn">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" id="availabilityFilter">
                            <option value="">Todos os livros</option>
                            <option value="true">Disponíveis</option>
                            <option value="false">Emprestados</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-primary w-100" data-bs-toggle="modal" data-bs-target="#bookModal">
                            <i class="fas fa-plus me-2"></i>Adicionar Livro
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Books Table -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Gerenciar Livros</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Título</th>
                                    <th>Autor</th>
                                    <th>Editora</th>
                                    <th>ISBN</th>
                                    <th>Status</th>
                                    <th>Ações</th>
                                </tr>
                            </thead>
                            <tbody id="booksTableBody">
                                <tr>
                                    <td colspan="6" class="text-center">
                                        <div class="spinner-border" role="status">
                                            <span class="visually-hidden">Carregando...</span>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    
                    <!-- Pagination -->
                    <nav aria-label="Paginação de livros">
                        <ul class="pagination justify-content-center" id="pagination">
                            <!-- Pagination will be generated by JavaScript -->
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
<div id="toast-container"></div>    
    <!-- Book Modal -->
    <div class="modal fade" id="bookModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="bookModalTitle">Adicionar Livro</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="bookForm">
                    <div class="modal-body">
                        <input type="hidden" id="bookId" name="bookId">
                        
                        <div class="mb-3">
                            <label for="title" class="form-label">Título</label>
                            <input type="text" class="form-control" id="title" name="title" required>
                        </div>
                        
                        <div class="mb-3">
                            <label for="author" class="form-label">Autor</label>
                            <input type="text" class="form-control" id="author" name="author" required>
                        </div>
                        
                        <div class="mb-3">
                            <label for="editor" class="form-label">Editora</label>
                            <input type="text" class="form-control" id="editor" name="editor" required>
                        </div>
                        
                        <div class="mb-3">
                            <label for="isbn" class="form-label">ISBN</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="isbn" name="isbn" required placeholder="9788573264018">
                                <button type="button" class="btn btn-outline-secondary" id="searchByIsbnBtn" title="Buscar informações do livro por ISBN">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                            <div class="form-text">Digite o ISBN e clique em buscar para preencher automaticamente</div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary" id="saveBookBtn">
                            <span class="spinner-border spinner-border-sm d-none me-2"></span>
                            Salvar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Toast Container -->
    <div class="toast-container position-fixed top-0 end-0 p-3"></div>

    <!-- Pagination Script -->
    <script src="/js/pagination.js"></script>
    
    <script>
        let booksManager;
        let isEditing = false;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            initializeBooksManager();
            setupEventListeners();
        });

        function initializeBooksManager() {
            booksManager = new AdminPagination({
                apiEndpoint: '/api/books',
                tableBodyId: 'booksTableBody',
                paginationId: 'pagination',
                searchInputId: 'searchInput',
                searchBtnId: 'searchBtn',
                filterIds: ['availabilityFilter'],
                emptyMessage: 'Nenhum livro encontrado',
                renderRow: renderBookRow,
                onLoadError: (error) => {
                    console.error('Erro ao carregar livros:', error);
                    showToast('Erro ao carregar livros', 'error');
                }
            });
        }

        function renderBookRow(book) {
            return `
                <tr>
                    <td><strong>${book.title}</strong></td>
                    <td>${book.author}</td>
                    <td>${book.editor}</td>
                    <td><code>${book.isbn}</code></td>
                    <td>${getAvailabilityBadge(book.available)}</td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary btn-action btn-edit-book" data-book-id="${book._id}" title="Editar">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger btn-action btn-delete-book" data-book-id="${book._id}" title="Remover">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `;
        }

        function getAvailabilityBadge(available) {
            return available ? 
                '<span class="badge bg-success">Disponível</span>' : 
                '<span class="badge bg-warning">Emprestado</span>';
        }

        function setupEventListeners() {
            // Form submission
            document.getElementById('bookForm').addEventListener('submit', handleFormSubmit);
            
            // Modal events
            document.getElementById('bookModal').addEventListener('hidden.bs.modal', resetForm);
            
            // Sidebar toggle for mobile
            const sidebarToggle = document.getElementById('sidebarToggle');
            if (sidebarToggle) {
                sidebarToggle.addEventListener('click', function() {
                    document.querySelector('.sidebar').classList.toggle('show');
                });
            }
        }

        async function handleFormSubmit(e) {
            e.preventDefault();
            
            const saveBtn = document.getElementById('saveBookBtn');
            const spinner = saveBtn.querySelector('.spinner-border');
            
            saveBtn.disabled = true;
            spinner.classList.remove('d-none');
            
            try {
                const formData = new FormData(e.target);
                const bookData = Object.fromEntries(formData.entries());
                
                const url = isEditing ? `/api/books/update/${bookData.bookId}` : '/api/books/add';
                const method = 'POST';
                
                if (isEditing) {
                    delete bookData.bookId;
                }
                
                const response = await fetch(url, {
                    method: method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(bookData)
                });
                
                if (response.ok) {
                    showToast(isEditing ? 'Livro atualizado com sucesso!' : 'Livro adicionado com sucesso!', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('bookModal')).hide();
                    booksManager.refresh();
                } else {
                    const error = await response.json();
                    showToast(error.message || 'Erro ao salvar livro', 'error');
                }
                
            } catch (error) {
                console.error('Erro ao salvar livro:', error);
                showToast('Erro ao salvar livro', 'error');
            } finally {
                saveBtn.disabled = false;
                spinner.classList.add('d-none');
            }
        }

        async function searchByIsbn() {
            const isbn = document.getElementById('isbn').value.trim();
            if (!isbn) {
                showToast('Digite um ISBN válido', 'warning');
                return;
            }
            
            // Validar formato básico do ISBN
            const isbnPattern = /^(?:97[89]-?\d{1,5}-?\d{1,7}-?\d{1,6}-?\d|97[89]\d{10}|\d{1,5}-?\d{1,7}-?\d{1,6}-?\d|\d{9}[0-9X])$/;
            if (!isbnPattern.test(isbn.replace(/[-\s]/g, ''))) {
                showToast('Formato de ISBN inválido', 'warning');
                return;
            }
            
            const btn = document.getElementById('searchByIsbnBtn');
            const originalHTML = btn.innerHTML;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
            btn.disabled = true;
            
            try {
                // Limpar ISBN removendo hífens e espaços
                const cleanIsbn = isbn.replace(/[-\s]/g, '');
                
                // Buscar na API do Google Books
                const googleBooksUrl = `https://www.googleapis.com/books/v1/volumes?q=isbn:${cleanIsbn}`;
                const response = await fetch(googleBooksUrl);
                
                if (!response.ok) {
                    throw new Error('Erro na API do Google Books');
                }
                
                const data = await response.json();
                
                if (data.totalItems === 0) {
                    showToast('Nenhum livro encontrado com este ISBN', 'warning');
                    return;
                }
                
                // Pegar o primeiro resultado
                const book = data.items[0].volumeInfo;
                
                // Preencher os campos do formulário
                if (book.title) {
                    document.getElementById('title').value = book.title;
                }
                
                if (book.authors && book.authors.length > 0) {
                    document.getElementById('author').value = book.authors.join(', ');
                }
                
                if (book.publisher) {
                    document.getElementById('editor').value = book.publisher;
                }
                
                // Atualizar o campo ISBN com o formato limpo
                document.getElementById('isbn').value = cleanIsbn;
                
                showToast('Informações preenchidas automaticamente pela API do Google Books!', 'success');
                
            } catch (error) {
                console.error('Erro ao buscar por ISBN:', error);
                showToast('Erro ao buscar informações do livro. Verifique sua conexão com a internet.', 'error');
            } finally {
                btn.innerHTML = originalHTML;
                btn.disabled = false;
            }
        }

        async function editBook(bookId) {
            try {
                const response = await fetch(`/api/books/${bookId}`);
                const book = await response.json();
                
                document.getElementById('bookId').value = book._id;
                document.getElementById('title').value = book.title;
                document.getElementById('author').value = book.author;
                document.getElementById('editor').value = book.editor;
                document.getElementById('isbn').value = book.isbn;
                
                document.getElementById('bookModalTitle').textContent = 'Editar Livro';
                isEditing = true;
                
                new bootstrap.Modal(document.getElementById('bookModal')).show();
                
            } catch (error) {
                console.error('Erro ao carregar livro:', error);
                showToast('Erro ao carregar dados do livro', 'error');
            }
        }

        async function deleteBook(bookId) {
            if (!confirm('Tem certeza que deseja remover este livro? Esta ação não pode ser desfeita.')) return;
            
            try {
                const response = await fetch(`/api/books/remove/${bookId}`, {
                    method: 'POST'
                });
                
                if (response.ok) {
                    showToast('Livro removido com sucesso!', 'success');
                    booksManager.refresh();
                } else {
                    const error = await response.json();
                    showToast(error.message || 'Erro ao remover livro', 'error');
                }
                
            } catch (error) {
                console.error('Erro ao remover livro:', error);
                showToast('Erro ao remover livro', 'error');
            }
        }

        function resetForm() {
            document.getElementById('bookForm').reset();
            document.getElementById('bookId').value = '';
            document.getElementById('bookModalTitle').textContent = 'Adicionar Livro';
            isEditing = false;
        }

        // Event Delegation for action buttons
        document.addEventListener('click', function(e) {
            if (e.target.closest('.btn-edit-book')) {
                const bookId = e.target.closest('.btn-edit-book').dataset.bookId;
                editBook(bookId);
            } else if (e.target.closest('.btn-delete-book')) {
                const bookId = e.target.closest('.btn-delete-book').dataset.bookId;
                deleteBook(bookId);
            } else if (e.target.closest('#searchByIsbnBtn')) {
                searchByIsbn();
            }
        });
    </script>

<%- include('partials/footer') %>