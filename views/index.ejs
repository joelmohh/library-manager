<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MyLib - Sistema de Biblioteca</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <!-- Simple header with MyLib logo and login button -->
    <header class="main-header">
        <div class="header-container">
            <h1 class="logo">MyLib</h1>
            <a href="/login" class="btn-login">Entrar</a>
        </div>
    </header>

    <main class="main-content">
        <!-- Search section with rounded container -->
        <div class="search-container">
            <div class="search-bar">
                <input type="text" id="searchInput" placeholder="Digite um termo para procurar" class="search-input">
                <button type="button" id="searchBtn" class="btn-search">PROCURAR</button>
            </div>
        </div>

        <!-- Books table with clean design -->
        <div class="books-container">
            <div class="table-wrapper">
                <table class="books-table">
                    <thead>
                        <tr>
                            <th>TITULO</th>
                            <th>AUTOR</th>
                            <th>STATUS</th>
                        </tr>
                    </thead>
                    <tbody id="booksTableBody">
                        <!-- Books will be loaded here via JavaScript -->
                    </tbody>
                </table>
            </div>

            <!-- Pagination controls at bottom -->
            <div class="pagination-controls">
                <div class="items-per-page">
                    <label>Exibir</label>
                    <select id="itemsPerPage" class="select-items">
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                    </select>
                </div>
                <div class="pagination-info">
                    <span id="paginationText"></span>
                </div>
                <div class="pagination-buttons" id="paginationButtons">
                    <!-- Pagination buttons will be generated here -->
                </div>
            </div>
        </div>
    </main>

    <!-- Toast container -->
    <div id="toast-container"></div>

    <script src="/js/toast.js"></script>
    <script>
        let currentPage = 1;
        let itemsPerPage = 10;
        let allBooks = [];
        let filteredBooks = [];

        // Load books on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadBooks();
            
            // Search functionality
            document.getElementById('searchBtn').addEventListener('click', performSearch);
            document.getElementById('searchInput').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    performSearch();
                }
            });

            // Items per page change
            document.getElementById('itemsPerPage').addEventListener('change', function() {
                itemsPerPage = parseInt(this.value);
                currentPage = 1;
                displayBooks();
            });
        });

        async function loadBooks() {
            try {
                const response = await fetch('/api/books');
                if (response.ok) {
                    const data = await response.json();
                    allBooks = data.books || [];
                    filteredBooks = [...allBooks];
                    displayBooks();
                } else {
                    showToast('Erro ao carregar livros', 'error');
                }
            } catch (error) {
                console.error('Error loading books:', error);
                showToast('Erro ao conectar com o servidor', 'error');
            }
        }

        function performSearch() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase().trim();
            
            if (searchTerm === '') {
                filteredBooks = [...allBooks];
            } else {
                filteredBooks = allBooks.filter(book => 
                    book.title.toLowerCase().includes(searchTerm) ||
                    book.author.toLowerCase().includes(searchTerm)
                );
            }
            
            currentPage = 1;
            displayBooks();
        }

        function displayBooks() {
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;
            const booksToShow = filteredBooks.slice(startIndex, endIndex);
            
            const tbody = document.getElementById('booksTableBody');
            tbody.innerHTML = '';
            
            if (booksToShow.length === 0) {
                tbody.innerHTML = '<tr><td colspan="3" class="no-results">Nenhum livro encontrado</td></tr>';
            } else {
                booksToShow.forEach(book => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${book.title}</td>
                        <td>${book.author}</td>
                        <td>
                            <span class="availability-badge ${book.available ? 'available' : 'unavailable'}">
                                ${book.available ? 'Disponível' : 'Indisponível'}
                            </span>
                        </td>
                    `;
                    tbody.appendChild(row);
                });
            }
            
            updatePagination();
        }

        function updatePagination() {
            const totalPages = Math.ceil(filteredBooks.length / itemsPerPage);
            const paginationText = document.getElementById('paginationText');
            const paginationButtons = document.getElementById('paginationButtons');
            
            // Update pagination text
            const startItem = (currentPage - 1) * itemsPerPage + 1;
            const endItem = Math.min(currentPage * itemsPerPage, filteredBooks.length);
            paginationText.textContent = `${startItem}-${endItem} de ${filteredBooks.length}`;
            
            // Generate pagination buttons
            paginationButtons.innerHTML = '';
            
            if (totalPages > 1) {
                // Previous button
                if (currentPage > 1) {
                    const prevBtn = document.createElement('button');
                    prevBtn.textContent = '‹';
                    prevBtn.className = 'pagination-btn';
                    prevBtn.onclick = () => changePage(currentPage - 1);
                    paginationButtons.appendChild(prevBtn);
                }
                
                // Page numbers
                for (let i = 1; i <= totalPages; i++) {
                    if (i === 1 || i === totalPages || (i >= currentPage - 1 && i <= currentPage + 1)) {
                        const pageBtn = document.createElement('button');
                        pageBtn.textContent = i;
                        pageBtn.className = `pagination-btn ${i === currentPage ? 'active' : ''}`;
                        pageBtn.onclick = () => changePage(i);
                        paginationButtons.appendChild(pageBtn);
                    } else if (i === currentPage - 2 || i === currentPage + 2) {
                        const dots = document.createElement('span');
                        dots.textContent = '...';
                        dots.className = 'pagination-dots';
                        paginationButtons.appendChild(dots);
                    }
                }
                
                // Next button
                if (currentPage < totalPages) {
                    const nextBtn = document.createElement('button');
                    nextBtn.textContent = '›';
                    nextBtn.className = 'pagination-btn';
                    nextBtn.onclick = () => changePage(currentPage + 1);
                    paginationButtons.appendChild(nextBtn);
                }
            }
        }

        function changePage(page) {
            currentPage = page;
            displayBooks();
        }
    </script>
</body>
</html>
